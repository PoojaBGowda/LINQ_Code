1. DELETING DATA FROM XML USING LINQ
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;

namespace xmllinqdelete
{
    class Program
    {
        static void Main(string[] args)
        {
          
                String path = "c:/users/mslceltp1045/documents/visual studio 2015/Projects/xmllinqdelete/xmllinqdelete/xmldelete/XMLFile1.xml";
                XDocument xdoc = XDocument.Load(path);
                var product = xdoc.Descendants("product").Single(p => p.Attribute("id").Value.Equals("p04"));

                product.Remove();
                xdoc.Save("path");
                Console.Write(xdoc);
            
           
            Console.ReadLine();


        }

    }
}
------------------------------------------------
<?xml version="1.0" encoding="utf-8" ?>
<products>
  <product id="p01">
    <name>product 1</name>
    <price currency="USD">100</price>
  </product>
  <product id="p02">
    <name>product 2</name>
    <price currency="EUR">500</price>
  </product>
  <product id="p03">
    <name>product 3</name>
    <price currency="RUP">400</price>
  </product>
  <product id="p04">
    <name>product 4</name>
    <price currency="DOL">300</price>
  </product>
</products>



2. MODIFYING DATA FROM XML USING LINQ

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Xml.Linq;

namespace linq_modify
{
    class Program
    {
        static void Main(String[] args)
        {
                string path = "....\\..\\data\\linq_modify.xml";
                XDocument xdoc = XDocument.Load(path);
                //modify a product by id
                var product = xdoc.Descendants("product").Single(p => p.Attribute("id").Value.Equals("p02"));
                product.SetElementValue("name", "pro");
                product.SetElementValue("price", 40);
                xdoc.Save(path);
                Console.ReadLine();
        }
            
    }
}


------------------------------------------------

<?xml version="1.0" encoding="utf-8"?>
<products>
  <product id="p01">
    <name>Product1</name>
    <price currency="USD">100</price>
  </product>
  <product id="p02">
    <name>pro</name>
    <price currency="EUR">40</price>
  </product>
  <product id="p03">
    <name>product3</name>
    <price currency="AUD">300</price>
  </product>
</products>


3.READING DATA FROM XML USING LINQ


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;

namespace ReadingXml
{
    class Program
    {
        static void Main(string[] args)
        {
            XDocument document = XDocument.Load("Database\\product.xml");
            document.Descendants("product").Select(p => new
            {
                id =p.Attribute("id").Value,
               name = p.Element("name").Value,
               price = p.Element("price").Value,
                currency = p.Element("price").Attribute("currency").Value
            }).ToList().ForEach( p => {
                Console.WriteLine("id: " + p.id);
                Console.WriteLine("name:" + p.name);
                Console.WriteLine("price:"+p.price);
                Console.WriteLine("currency:"+p.currency);
                Console.WriteLine("==================");
            });


           
            
            Console.ReadLine();
            
        }
    }
}

-----------------------------------------------

<?xml version="1.0" encoding="utf-8" ?>
<products>
  <product id="p1">
    <name> Product 1</name>
    <price currency="USD">10000</price>
  </product>
    <product id="p2">
      <name> Product 2</name>
      <price currency="EUR">20000</price>
    </product>
    <product id="p3">
      <name> Product 3</name>
      <price currency="ASD">30000</price>
    </product>
  
</products>?

